/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.27
 * Generated at: 2019-12-09 05:44:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.bandtracker.hibernate.entity.User;
import org.bandtracker.hibernate.entity.Show;
import org.bandtracker.hibernate.entity.Booking;
import java.util.List;

public final class testHome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1574351613000L));
    _jspx_dependants.put("jar:file:/Users/nicholaswhite/Documents/GitHub/csc499/Application/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/BandTracker/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153399482000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.bandtracker.hibernate.entity.Show");
    _jspx_imports_classes.add("org.bandtracker.hibernate.entity.User");
    _jspx_imports_classes.add("org.bandtracker.hibernate.entity.Booking");
    _jspx_imports_classes.add("java.util.List");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl.release();
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write('\n');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write('\n');
      out.write('\n');

String username = null;
String userId = null;
String userType = null;
Cookie[] cookies = request.getCookies();
	if(cookies !=null){
		for(Cookie cookie : cookies){
			if(cookie.getName().equals("user"))
				username = cookie.getValue();
			if(cookie.getName().equals("userId"))
				userId = cookie.getValue();
			if(cookie.getName().equals("userType"))
				userType = cookie.getValue();
			
		}
	}

if(username == null) response.sendRedirect("login.jsp");

      out.write('\n');
      out.write('\n');

User user = (User)request.getAttribute("user");
String public_name = user.getPublicName();
String user_type = user.getUserType();

List<User> userList = (List)request.getAttribute("userList");

      out.write("\n");
      out.write("\n");
      out.write("<center><h1>Welcome, ");
      out.print( public_name );
      out.write("</h1></center>\n");
      out.write("<div class=\"container mtb\">\n");
      out.write("\n");
      out.write("<div class=\"col-lg-6\">\n");
 
	user_type = user_type.toString().toLowerCase();
	if (user_type.toLowerCase().equals("bar")) {
		out.print(
					"<strong>Your upcoming shows:</strong>" +
						"<hr/>" +
							"<table>" +
								"<thead>" +
									"<th>SHOW</th>" +
									"<th>START</th>" +
									"<th>END</th>" +
								"</thead>");

					List<Show> showList = (List)request.getAttribute("shows");
					int show_id;
					for(int i=0; i<showList.size(); i++) {
						show_id = showList.get(i).getShowId();
						out.print("<tr class='bordered'>");
						out.print("<td>" + showList.get(i).getShowName() + "</td>");
						out.print("<td>" + showList.get(i).getStartDatetime() + "</td>");
						out.print("<td>" + showList.get(i).getEndDatetime() + "</td>");
						out.print("<td><form action='" + request.getContextPath() + "/operation?"
								+ "&show_id=" + show_id + "' method='get'>"
								+ "<input type='submit' value='VIEW'>"
								+ "<input type='hidden' name='page' value='editShow'>"
								+ "<input type='hidden' name='user_id' value='" + userId + "'>"
								+ "<input type='hidden' name='show_id' value='" + show_id + "'>"
								+ "</form></td>");
					}
		out.print(					
					"</table>" +
				"</div>"
				);
	}
	
	else if (user_type.toLowerCase().equals("band")) {
      out.write('\n');
      out.write('	');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "displayUserBookings.jsp", out, false);
      out.write("\n");
      out.write("\t\t\t\t\t");

		out.print("</div>");
	}

	if (user_type.toLowerCase().equals("fan")) {
		out.print(
					"<strong>Upcoming shows:</strong>" +
						"<hr/>" +
							"<table>" +
								"<thead>" +
									"<th>SHOW</th>" +
									"<th>START</th>" +
									"<th>END</th>" +
								"</thead>");
					
					List<Show> showList = (List)request.getAttribute("shows");
					int show_id;
					for(int i=0; i<showList.size() && i<10; i++) {
						show_id = showList.get(i).getShowId();
						out.print("<tr class='bordered'>");
						out.print("<td>" + showList.get(i).getShowName() + "</td>");
						out.print("<td>" + showList.get(i).getStartDatetime() + "</td>");
						out.print("<td>" + showList.get(i).getEndDatetime() + "</td>");
						out.print("<td><form action='" + request.getContextPath() + "/operation?"
								+ "&show_id=" + show_id + "' method='get'>"
								+ "<input type='hidden' name='user_id' value='" + userId+ "'>"
								+ "<input type='hidden' name='show_id' value='" + show_id + "'>"
								+ "<input type='hidden' name='page' value='show'>"
								+ "<input type='submit' value='VIEW SHOW'>"
								+ "</form></td>");
					}
						out.print("</table><br>");
						out.print("<center><form action='" + request.getContextPath() + "/operation? method='get'>"
								+ "<input type='hidden' name='page' value='upcomingShows'>"
								+ "<input type='submit' value='EVEN MORE SHOWS'>"
								+ "</form></center>");
					out.print("</div>");
	}

      out.write("\n");
      out.write("\t\t<div class=\"col-lg-6\">\n");
      out.write("\t\t\t<strong>Check out these local folks:</strong>\n");
      out.write("\t\t\t<hr />\n");
      out.write("\t\t\t<table>\n");
      out.write("\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t<th>\n");
      out.write("\t\t\t\t\t\t");

							if (!user_type.equals("FAN")) {
								out.print(userList.get(0).getUserType());
							} else {
								out.print("FOLK");
								out.print("<th>TYPE</th>");
							}
						
      out.write("\n");
      out.write("\t\t\t\t\t</th>\n");
      out.write("\t\t\t\t\t<th>TOWN</th>\n");
      out.write("\t\t\t\t\t<th>WEBSITE</th>\n");
      out.write("\t\t\t\t</thead>\n");
      out.write("\t\t\t\t");

					int booker_id = user.getUserId();
					for (int i = 0; i < userList.size(); i++) {
						int bookee = userList.get(i).getUserId();
						out.print("<tr class='bordered'>");
						out.print("<td>" + userList.get(i).getPublicName() + "</td>");
						if (user_type.equals("FAN")) {
							out.print("<td>" + userList.get(i).getUserType() + "</td>");
						}
						out.print("<td>" + userList.get(i).getTown() + "</td>");
						out.print("<td>" + userList.get(i).getWebsiteURL() + "</td>");
						out.print("<td><form action='" + request.getContextPath() + "/operation?" + "&user_id=" + booker_id
								+ "' method='get'>" + "<input type='submit' value='VIEW PROFILE'>"
								+ "<input type='hidden' name='page' value='profile'>"
								+ "<input type='hidden' name='booker' value='" + booker_id + "'>"
								+ "<input type='hidden' name='bookee' value='" + bookee + "'>" + "</form></td>");
						if (!user_type.equals("FAN")) {
							out.print("<td><form action='" + request.getContextPath() + "/operation?booker_id=" + booker_id
									+ "&bookee_id=" + userList.get(i).getUserId() + "' method='get'>"
									+ "<input type='submit' value='BOOK'>" + "<input type='hidden' name='page' value='book'>"
									+ "<input type='hidden' name='booker' value='" + booker_id + "'>"
									+ "<input type='hidden' name='bookee' value='" + bookee + "'>"
									+ "<input type='hidden' name='user_type' value='" + user_type + "'>" + "</form></td>");
						} else {
							int fan_id = booker_id;
							int followee_id = bookee;
							out.print("<td><form action='" + request.getContextPath() + "/operation?follower_id=" + fan_id
									+ "&followee_id=" + userList.get(i).getUserId() + "' method='post'>"
									+ "<input type='submit' value='FOLLOW'>"
									+ "<input type='hidden' name='page' value='follow'>"
									+ "<input type='hidden' name='follower' value='" + fan_id + "'>"
									+ "<input type='hidden' name='followee' value='" + followee_id + "'>" + "</form></td>");
						}
					}
				
      out.write("\n");
      out.write("\t\t\t</table>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<br>\n");
      out.write("</div>\n");
      if (_jspx_meth_c_005fimport_005f1(_jspx_page_context))
        return;
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f0_reused = false;
    try {
      _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f0.setParent(null);
      // /testHome.jsp(8,0) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f0.setUrl("header.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
        if (_jspx_eval_c_005fimport_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_c_005fimport_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            _jspx_push_body_count_c_005fimport_005f0[0]++;
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_c_005fimport_005f0);
          }
          do {
            out.write('\n');
            if (_jspx_meth_c_005fparam_005f0(_jspx_th_c_005fimport_005f0, _jspx_page_context, _jspx_push_body_count_c_005fimport_005f0))
              return true;
            out.write('\n');
            int evalDoAfterBody = _jspx_th_c_005fimport_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_c_005fimport_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
            _jspx_push_body_count_c_005fimport_005f0[0]--;
          }
        }
        if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl.reuse(_jspx_th_c_005fimport_005f0);
      _jspx_th_c_005fimport_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fparam_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fimport_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fimport_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:param
    org.apache.taglibs.standard.tag.rt.core.ParamTag _jspx_th_c_005fparam_005f0 = (org.apache.taglibs.standard.tag.rt.core.ParamTag) _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ParamTag.class);
    boolean _jspx_th_c_005fparam_005f0_reused = false;
    try {
      _jspx_th_c_005fparam_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fparam_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fimport_005f0);
      // /testHome.jsp(9,0) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fparam_005f0.setName("title");
      // /testHome.jsp(9,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fparam_005f0.setValue("Index");
      int _jspx_eval_c_005fparam_005f0 = _jspx_th_c_005fparam_005f0.doStartTag();
      if (_jspx_th_c_005fparam_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.reuse(_jspx_th_c_005fparam_005f0);
      _jspx_th_c_005fparam_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fparam_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fparam_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fimport_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f1 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f1_reused = false;
    try {
      _jspx_th_c_005fimport_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f1.setParent(null);
      // /testHome.jsp(179,0) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f1.setUrl("footer.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f1 = _jspx_th_c_005fimport_005f1.doStartTag();
        if (_jspx_th_c_005fimport_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f1);
      _jspx_th_c_005fimport_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f1_reused);
    }
    return false;
  }
}
