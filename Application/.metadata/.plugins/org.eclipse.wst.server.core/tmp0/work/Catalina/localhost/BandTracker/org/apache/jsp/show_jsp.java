/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.27
 * Generated at: 2019-12-09 05:13:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.bandtracker.hibernate.entity.User;
import org.bandtracker.hibernate.entity.Show;
import org.bandtracker.hibernate.entity.Booking;
import java.util.List;

public final class show_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1574351613000L));
    _jspx_dependants.put("jar:file:/Users/nicholaswhite/Documents/GitHub/csc499/Application/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/BandTracker/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153399482000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.bandtracker.hibernate.entity.Show");
    _jspx_imports_classes.add("org.bandtracker.hibernate.entity.User");
    _jspx_imports_classes.add("org.bandtracker.hibernate.entity.Booking");
    _jspx_imports_classes.add("java.util.List");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl.release();
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write('\n');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write('\n');
      out.write('\n');

String username = null;
String userId = null;
String userType = null;
Cookie[] cookies = request.getCookies();
	if(cookies !=null){
		for(Cookie cookie : cookies){
			if(cookie.getName().equals("user"))
				username = cookie.getValue();
			if(cookie.getName().equals("userId"))
				userId = cookie.getValue();
			if(cookie.getName().equals("userType"))
				userType = cookie.getValue();
			
		}
	}

if(username == null) {
	response.sendRedirect("login.jsp");
	return;
}

      out.write('\n');
      out.write('\n');

List<List<Object>> bookingList = (List)request.getAttribute("bookings");
Boolean edit = Boolean.parseBoolean(request.getAttribute("edit").toString());
Show show = (Show)request.getAttribute("show");

      out.write("\n");
      out.write("\n");
      out.write("<div class=\"container\">\n");
      out.write("\t<h1>Show Details</h1>\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\t<div class=\"col-lg-8\">\n");
      out.write("\t\t\t<h3>Show details:</h3>\n");
      out.write("\t\t\t<hr/>\n");
      out.write("\t\t\t<table>\n");
      out.write("\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t<th>Show</th>\n");
      out.write("\t\t\t\t\t<th>Start</th>\n");
      out.write("\t\t\t\t\t<th>End</th>\n");
      out.write("\t\t\t\t\t<th>Description</th>\n");
      out.write("\t\t\t\t</thead>\n");
      out.write("\t\t\t\t\t");
 
					int showId = 0;
					if(! edit) {
						out.print("<td>" + show.getShowName() + "</td>");
						out.print("<td>" + show.getStartDatetime() + "</td>");
						out.print("<td>" + show.getEndDatetime() + "</td>");
						out.print("<td>" + show.getShowDescription() + "</td>");
					}
					else {
							showId = show.getShowId();
							out.print("<tr>");
							out.print("<form action='" + request.getContextPath() + "/operation' method='post'>"
									+ "<td><input type='text' name='name' value='" + show.getShowName() + "'></td>"
									+ "<td><input type='text' name='start' value='" + show.getStartDatetime() + "'></td>"
									+ "<td><input type='text' name='end' value='" + show.getEndDatetime() + "'></td>");
							out.print("<td><input type='text' name='description' value='" + show.getShowDescription() + "'></td>"
									+ "<input type='hidden' name='userId' value='" + userId + "'>"
									+ "<input type='hidden' name='userType' value='" + userType + "'>"
									+ "<input type='hidden' name='showId' value='" + showId + "'>"
									+ "<input type='hidden' name='show_id' value='" + showId + "'>"
									+ "<input type='hidden' name='form' value='editShowOperation'>"
									+ "<td><input type='submit' value='Submit'></td></form>"
									);
							out.print("<form action='" + request.getContextPath() + "/operation' method='post'>"
									+ "<input type='hidden' name='showId' value='" + showId + "'>"
									+ "<input type='hidden' name='form' value='deleteShowOperation'>"
									+ "<td><input type='submit' value='Delete'></td></form>"
									);
							out.print("</tr>");
							}
					
      out.write("\n");
      out.write("\t\t\t</table>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      out.write("<br>\n");
      out.write("<div class=\"container\">\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\t<div class=\"col-lg-8\">\n");
      out.write("\t\t\t<h3>Associated bookings:</h3>\n");
      out.write("\t\t\t<hr/>\n");
      out.write("\t\t\t<table>\n");
      out.write("\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t<th>Band</th>\n");
      out.write("\t\t\t\t\t<th>Date & Time of Request</th>\n");
      out.write("\t\t\t\t\t<th>Start</th>\n");
      out.write("\t\t\t\t\t<th>Duration</th>\n");
      out.write("\t\t\t\t\t");
 if (! userType.toLowerCase().equals("fan")) {
						out.print("<th>Status</th>");
					}
      out.write("\n");
      out.write("\t\t\t\t\t</thead>\n");
      out.write("\t\t\t\t\t");

					if(! edit) {
					for(int i=0; i<bookingList.size(); i++) {
						Boolean bar_conf = Boolean.parseBoolean(bookingList.get(i).get(4).toString());
						Boolean band_conf = Boolean.parseBoolean(bookingList.get(i).get(5).toString());
						String bar_confirmed = null, band_confirmed = null;
						if (bar_conf.equals(null)) {
							bar_confirmed = "Pending";
						}
						else if (bar_conf == false) {
							bar_confirmed = "Denied";
						}
						else if (bar_conf == true) {
							bar_confirmed = "Confirmed";
						}
						if (band_conf.equals(null)) {
							band_confirmed = "Pending";
						}
						else if (band_conf == false) {
							band_confirmed = "Denied";
						}
						else if (band_conf == true) {
							band_confirmed = "Confirmed";
						}
						out.print("<tr>");
						out.print("<td>" + bookingList.get(i).get(6).toString() + "</td>");
						out.print("<td>" + bookingList.get(i).get(3).toString() + "</td>");
						out.print("<td>" + bookingList.get(i).get(1).toString() + "</td>");
						out.print("<td> " + bookingList.get(i).get(2).toString() + "</td>");
						if (! userType.toLowerCase().equals("fan")) {
							out.print("<td>Bar: " + bar_confirmed + "</td>");
							out.print("<td>Band: " + band_confirmed + "</td>");
							out.print("</tr>");	
						}
						}
					}
					else{
						for(int i=0; i<bookingList.size(); i++) {
							Boolean bar_conf = Boolean.parseBoolean(bookingList.get(i).get(4).toString());
							Boolean band_conf = Boolean.parseBoolean(bookingList.get(i).get(5).toString());
							String bar_confirmed = null, band_confirmed = null;
							if (bar_conf == null) {
								bar_confirmed = "Pending";
							}
							else if (bar_conf == false) {
								bar_confirmed = "Denied";
							}
							else if (bar_conf == true) {
								bar_confirmed = "Confirmed";
							}
							if (band_conf == null) {
								band_confirmed = "Pending";
							}
							else if (band_conf == false) {
								band_confirmed = "Denied";
							}
							else if (band_conf == true) {
								band_confirmed = "Confirmed";
							}
							int bookingId = Integer.parseInt(bookingList.get(i).get(0).toString());
							out.print("<tr>");
							out.print("<td>" + bookingList.get(i).get(6).toString() + "</td>");
							out.print("<td>" + bookingList.get(i).get(3).toString() + "</td>");
							out.print("<form action='" + request.getContextPath() + "/operation' method='post'>"
									+ "<td><input type='text' name='requestedDatetime' value='" + bookingList.get(i).get(1).toString() + "'></td>"
									+ "<td><input type='text' name='duration' value='" + bookingList.get(i).get(2).toString() + "'></td>"
									//+ "<td><input type='radio' name='confirmed' value='true'>Confirm</td>"
									//+ "<td><input type='radio' name='confirmed' value='false'>Deny</td>"
									+ "<td>Bar: " + bar_confirmed + "</td>"
									+ "<td>Band: " + band_confirmed + "</td>"
									+ "<input type='hidden' name='userId' value='" + userId + "'>"
									+ "<input type='hidden' name='show_id' value='" + showId + "'>"
									+ "<input type='hidden' name='userType' value='" + userType + "'>"
									+ "<input type='hidden' name='bookingId' value='" + bookingId + "'>"
									+ "<input type='hidden' name='form' value='editBookingOperation'>"
									+ "<td><input type='submit' value='Submit'></td></form>"
									);
							out.print("<form action='" + request.getContextPath() + "/operation' method='post'>"
									+ "<input type='hidden' name='bookingId' value='" + bookingId + "'>"
									+ "<input type='hidden' name='form' value='deleteBookingOperation'>"
									+ "<td><input type='submit' value='Delete'></td></form>"
									);
							out.print("</tr>");
							}
						}
					
      out.write("\n");
      out.write("\t\t\t</table>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<br>\n");
      out.write("\n");
      if (_jspx_meth_c_005fimport_005f1(_jspx_page_context))
        return;
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f0_reused = false;
    try {
      _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f0.setParent(null);
      // /show.jsp(8,0) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f0.setUrl("header.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
        if (_jspx_eval_c_005fimport_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_c_005fimport_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            _jspx_push_body_count_c_005fimport_005f0[0]++;
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_c_005fimport_005f0);
          }
          do {
            out.write('\n');
            if (_jspx_meth_c_005fparam_005f0(_jspx_th_c_005fimport_005f0, _jspx_page_context, _jspx_push_body_count_c_005fimport_005f0))
              return true;
            out.write('\n');
            int evalDoAfterBody = _jspx_th_c_005fimport_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_c_005fimport_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
            _jspx_push_body_count_c_005fimport_005f0[0]--;
          }
        }
        if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl.reuse(_jspx_th_c_005fimport_005f0);
      _jspx_th_c_005fimport_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fparam_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fimport_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fimport_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:param
    org.apache.taglibs.standard.tag.rt.core.ParamTag _jspx_th_c_005fparam_005f0 = (org.apache.taglibs.standard.tag.rt.core.ParamTag) _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ParamTag.class);
    boolean _jspx_th_c_005fparam_005f0_reused = false;
    try {
      _jspx_th_c_005fparam_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fparam_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fimport_005f0);
      // /show.jsp(9,0) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fparam_005f0.setName("title");
      // /show.jsp(9,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fparam_005f0.setValue("Index");
      int _jspx_eval_c_005fparam_005f0 = _jspx_th_c_005fparam_005f0.doStartTag();
      if (_jspx_th_c_005fparam_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.reuse(_jspx_th_c_005fparam_005f0);
      _jspx_th_c_005fparam_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fparam_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fparam_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fimport_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f1 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    boolean _jspx_th_c_005fimport_005f1_reused = false;
    try {
      _jspx_th_c_005fimport_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fimport_005f1.setParent(null);
      // /show.jsp(200,0) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fimport_005f1.setUrl("footer.jsp");
      int[] _jspx_push_body_count_c_005fimport_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fimport_005f1 = _jspx_th_c_005fimport_005f1.doStartTag();
        if (_jspx_th_c_005fimport_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fimport_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fimport_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fimport_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f1);
      _jspx_th_c_005fimport_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fimport_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fimport_005f1_reused);
    }
    return false;
  }
}
